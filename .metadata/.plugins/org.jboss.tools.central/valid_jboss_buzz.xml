<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Support Lifecycle for Clang/LLVM, Go, and Rust</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/qpeJM3gOlOc/" /><category term="C" /><category term="C++" /><category term="clang/LLVM" /><category term="Developer Tools" /><category term="Go" /><category term="Modern App Dev" /><category term="Red Hat Enterprise Linux" /><category term="Red Hat Software Collections" /><category term="RHEL8" /><category term="Rust" /><category term="c/c++" /><category term="clang" /><category term="compilers" /><category term="gcc" /><category term="go" /><category term="Golang" /><category term="lifecycle" /><category term="llvm" /><category term="RHEL" /><category term="software collections" /><category term="support" /><author><name>Bob Davis</name></author><id>https://developers.redhat.com/blog/?p=539327</id><updated>2018-11-20T12:00:18Z</updated><published>2018-11-20T12:00:18Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;On the heels of our recently announcement, &lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/13/clang-llvm-6-0-go-1-10-and-rust-1-29-now-ga-for-rhel/"&gt;&lt;span style="font-weight: 400;"&gt;General Availability of Clang/LLVM 6.0, Go 1.10, and Rust 1.29&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, I want to share how we’ll be supporting them going forward. Previously, these packages had been in “&lt;/span&gt;&lt;a href="https://access.redhat.com/support/offerings/techpreview"&gt;&lt;span style="font-weight: 400;"&gt;Technology Preview&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;” status, which means that they were provided for “you to test functionality and provide feedback during the development process”, and were “not fully supported under Red Hat Subscription Level Agreements, may not be functionally complete, and are not intended for production use”. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;So now that we’ve promoted them to fully supported status, what does that mean? In the simplest terms, General Availability (GA) means that these packages have officially entered the “&lt;/span&gt;&lt;a href="https://access.redhat.com/support/policy/updates/errata/#Full_Support_Phase"&gt;&lt;span style="font-weight: 400;"&gt;Full Support Phase&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;” of their lifecycle:&lt;/span&gt;&lt;span id="more-539327"&gt;&lt;/span&gt;&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;During the Full Support Phase, qualified Critical and Important Security errata advisories (RHSAs) and Urgent and Selected High Priority Bug Fix errata advisories (RHBAs) may be released as they become available. Other errata advisories may be delivered as appropriate.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt; &lt;p&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;If available, new or improved hardware enablement and select enhanced software functionality may be provided at the discretion of Red Hat, generally in minor releases. Hardware enablement that does not require substantial software changes may be provided independent from minor releases at Red Hat&amp;#8217;s discretion.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt; &lt;p&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Minor releases will also include available and qualified errata advisories (RHSAs, RHBAs, and RHEAs). Minor releases are cumulative and include the contents of previously released updates. The focus for minor releases during this phase lies on resolving defects of medium or higher priority.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt; &lt;p&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Updated installation images will be provided for minor releases during the Full Support Phase.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Since these packages are fast evolving, we will be supporting them on a condensed lifecycle with an update cadence that makes sense for the specific package. For Rust, this means that there will be updates every quarter (approximately every 3 months) and for LLVM and Go, this will mean updates every 6 months. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Since these packages are so quick moving, the support for them will be slightly different than what we “typically” do &amp;#8211; which is to move slowly and support specific versions of a package for a long time. In the case of LLVM, Rust, and Go Toolsets, we will be maintaining the most recently released build only. In the event that a bug or vulnerability is discovered in an older build, the path to remedy will be to update to the most recent build of that toolset. If a bug is discovered in the current build, we will work to address it in the next scheduled build. That will by default be the next scheduled minor release (Application Stream in the case of Red Hat Enterprise Linux 8).&lt;/span&gt;&lt;/p&gt; &lt;p&gt;More information about these Toolsets can be found on &lt;a href="https://developers.redhat.com/products/clang-llvm-go-rust/overview/"&gt;developers.redhat.com&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#38;linkname=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#38;linkname=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#38;linkname=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#38;linkname=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#38;linkname=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#38;linkname=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#38;linkname=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#38;linkname=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F20%2Fsupport-lifecycle-for-clang-llvm-go-and-rust%2F&amp;#038;title=Support%20Lifecycle%20for%20Clang%2FLLVM%2C%20Go%2C%20and%20Rust" data-a2a-url="https://developers.redhat.com/blog/2018/11/20/support-lifecycle-for-clang-llvm-go-and-rust/" data-a2a-title="Support Lifecycle for Clang/LLVM, Go, and Rust"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/20/support-lifecycle-for-clang-llvm-go-and-rust/"&gt;Support Lifecycle for Clang/LLVM, Go, and Rust&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/qpeJM3gOlOc" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;On the heels of our recently announcement, General Availability of Clang/LLVM 6.0, Go 1.10, and Rust 1.29, I want to share how we’ll be supporting them going forward. Previously, these packages had been in “Technology Preview” status, which means that they were provided for “you to test functionality and provide feedback during the development process”, and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/20/support-lifecycle-for-clang-llvm-go-and-rust/"&gt;Support Lifecycle for Clang/LLVM, Go, and Rust&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/11/20/support-lifecycle-for-clang-llvm-go-and-rust/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">539327</post-id><dc:creator>Bob Davis</dc:creator><dc:date>2018-11-20T12:00:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/20/support-lifecycle-for-clang-llvm-go-and-rust/</feedburner:origLink></entry><entry><title>Quick start Infinispan on Kubernetes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0h7Abt_kpY4/quick-start-infinispan-on-kubernetes.html" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="minikube" scheme="searchisko:content:tags" /><author><name>Galder Zamarreño</name></author><id>searchisko:content:id:jbossorg_blog-quick_start_infinispan_on_kubernetes</id><updated>2018-11-19T12:14:56Z</updated><published>2018-11-19T12:14:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Last week we showed you &lt;a href="https://blog.infinispan.org/2018/11/the-fastest-path-to-running-infinispan.html"&gt;how to easily run Infinispan on top of OpenShift&lt;/a&gt;. This week we're trying to do the same on Minikube, a tool that makes it easy to run vanilla Kubernetes locally.&lt;br /&gt;&lt;br /&gt;Although we've already covered the topic in the &lt;a href="https://blog.infinispan.org/2016/08/running-infinispan-cluster-on-kubernetes.html"&gt;past&lt;/a&gt;, we felt the descriptors needed a permanent location and an update to the latest Infinispan releases. Detailed instructions can be found in &lt;a href="https://github.com/infinispan-demos/infinispan-kubernetes"&gt;this repository&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;With OpenShift, we took advantage of &lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/templates.html"&gt;Templates&lt;/a&gt; which allow a set of objects to be parameterised.&lt;br /&gt;Templates are OpenShift specific, so Kubernetes does not understand them. Instead, we provide you with the individual descriptors required to run Infinispan (Helm chart to come...). This includes:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;A &lt;a href="https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/statefulset.yaml"&gt;stateful set&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Two services, for &lt;a href="https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/service-hotrod.yaml"&gt;Hot Rod&lt;/a&gt; and &lt;a href="https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/service-http.yaml"&gt;HTTP REST&lt;/a&gt;&amp;nbsp;endpoints)&lt;/li&gt;&lt;li&gt;A &lt;a href="https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/rolebinding.yaml"&gt;rolebinding&lt;/a&gt;&amp;nbsp;so that Kubernetes API can be queried when forming a cluster.&lt;/li&gt;&lt;li&gt;A &lt;a href="https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/secret.yaml"&gt;secret&lt;/a&gt; for plain authentication.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Before applying the descriptors, download and install &lt;a href="https://kubernetes.io/docs/setup/minikube/"&gt;Minikube&lt;/a&gt;. Then, set a profile, select the VM driver, give it enough CPU and memory for your experiments, and start it.&lt;br /&gt;&lt;br /&gt;Once Minikube it's running and you have the corresponding &lt;span style="font-family: Courier New, Courier, monospace;"&gt;kubectl&lt;/span&gt; command line tool installed, simply call:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;$ kubectl apply -f .&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Once all pods are ready, you should verify the 3-node cluster has formed correctly (find out how in the &lt;a href="https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/README.md"&gt;README&lt;/a&gt; file).&lt;br /&gt;&lt;br /&gt;When ready, you can start storing and retrieving data. The HTTP REST endpoint is particularly useful for these initial tests, to verify everything works as expected:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;$ kubectl exec \&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; -it infinispan-server-0 \&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; -- curl -v -u test:changeme -H 'Content-type: text/plain' -d 'test' infinispan-server-http:8080/rest/default/stuff&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Then:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;$&lt;/span&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;kubectl exec -it infinispan-server-1 \&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;&amp;nbsp; -- curl -v -u test:changeme infinispan-server-http:8080/rest/default/stuff&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Go and try it out and let us know what you think. You can find us on &lt;a href="https://infinispan.zulipchat.com/"&gt;this Zulip chat&lt;/a&gt; :)&lt;br /&gt;&lt;br /&gt;Cheers,&lt;br /&gt;Galder&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/KhpT8bOEiLM" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0h7Abt_kpY4" height="1" width="1" alt=""/&gt;</content><summary>Last week we showed you how to easily run Infinispan on top of OpenShift. This week we're trying to do the same on Minikube, a tool that makes it easy to run vanilla Kubernetes locally. Although we've already covered the topic in the past, we felt the descriptors needed a permanent location and an update to the latest Infinispan releases. Detailed instructions can be found in this repository. With...</summary><dc:creator>Galder Zamarreño</dc:creator><dc:date>2018-11-19T12:14:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/KhpT8bOEiLM/quick-start-infinispan-on-kubernetes.html</feedburner:origLink></entry><entry><title>Quickly try Red Hat Decision Manager in your Cloud</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/S_AzAUVpbBo/" /><category term="Cloud" /><category term="Java" /><category term="JBoss BRMS" /><category term="Modern App Dev" /><category term="Red Hat Decision Manager" /><category term="Red Hat OpenShift Container Platform" /><category term="Business Rules" /><category term="CDK" /><category term="cloud" /><category term="demo" /><category term="how-to" /><category term="minishift" /><category term="Red Hat OpenShift" /><author><name>Eric D. Schabell</name></author><id>https://developers.redhat.com/blog/?p=535517</id><updated>2018-11-19T12:00:50Z</updated><published>2018-11-19T12:00:50Z</published><content type="html">&lt;p&gt;It&amp;#8217;s been some time since I last talked with you about business logic engines and using them in application development cloud architectures. At that time, I showcased &lt;a href="http://www.schabell.org/2016/12/appdev-cloud-howto-run-jboss-brms-in-container.html"&gt;running JBoss BRMS in a container&lt;/a&gt; on &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt;. This gives you the cloud experience, one that&amp;#8217;s portable across private and public clouds, but on your own local laptop using &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The world continues to move forward, a new product has been released which replaced JBoss BRMS with the &lt;a href="https://developers.redhat.com/products/red-hat-decision-manager/overview/"&gt;Red Hat Decision Manager&lt;/a&gt;, so now I want to provide a way for you to install this on OpenShift, in the same easy to use demo format.&lt;/p&gt; &lt;p&gt;&lt;span id="more-535517"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;/h3&gt; &lt;h3&gt;Red Hat Decision Manager easy installation on OpenShift&lt;/h3&gt; &lt;div id="attachment_535537" style="width: 310px" class="wp-caption alignright"&gt;&lt;img class="wp-image-535537 size-medium" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-ocp-console-300x171.png" alt="red hat decision manager" width="300" height="171" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-ocp-console-300x171.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-ocp-console-768x438.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-ocp-console-1024x584.png 1024w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;p class="wp-caption-text"&gt;Log in for Red Hat Decision Manager on OpenShift Container Platform&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Below is the outline from the easy installation project, a demo that gets you started in the fastest possible way. The goal here&amp;#8217;s to get you up and running, with a standard configuration to start your first business rules project.&lt;/p&gt; &lt;p&gt;This section takes you through the simple to install example project that delivers a fully operational, fresh out of the box installation of Red Hat Decision Manager. Not only that, it&amp;#8217;s a containerized installation that&amp;#8217;s created on your OpenShift installation!&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;div&gt; &lt;p&gt;First ensure you have an OpenShift container based installation, such as one of the following installed first:&lt;/p&gt; &lt;/div&gt; &lt;ul&gt; &lt;li&gt; &lt;div&gt; &lt;p&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo"&gt;My OCP Install Demo&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;div&gt; &lt;p&gt;or your own OpenShift installation such as &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt; or minishift.&lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;div&gt; &lt;p&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhdm-install-demo/-/archive/master/rhcs-rhdm-install-demo-master.zip"&gt;Download and unzip this demo.&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;div&gt; &lt;p&gt;Add products to installs directory.&lt;/p&gt; &lt;div id="attachment_535547" style="width: 310px" class="wp-caption alignright"&gt;&lt;img class="size-medium wp-image-535547" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-build-ocp-300x153.png" alt="red hat decision manager" width="300" height="153" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-build-ocp-300x153.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-build-ocp-768x392.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-build-ocp-1024x522.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-build-ocp.png 1139w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;p class="wp-caption-text"&gt;Watch the container building live on OpenShift Container Platform&lt;/p&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ol&gt; &lt;div&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;init.sh&lt;/code&gt; or &lt;code&gt;init.bat&lt;/code&gt; file.  Note: &lt;code&gt;init.bat&lt;/code&gt; must be run with Administrative privileges:&lt;/p&gt; &lt;/div&gt; &lt;pre&gt;# The installation needs to be pointed to a running version # of OpenShift, so pass an IP address such as: # $ ./init.sh 192.168.99.100 # example for OCP. $ ./init.sh 10.1.2.2 # example for CDK.&lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;div&gt; &lt;p&gt;Now log in to Red Hat Decision Manager and start developing containerized rules projects (the address will be generated by the init script).&lt;/p&gt; &lt;/div&gt; &lt;ul&gt; &lt;li&gt; &lt;div&gt; &lt;p&gt;OCP example: &lt;code&gt;http://rhcs-rhdm-install-demo-appdev-in-cloud.192.168.99.100.nip.io/decision-central&lt;/code&gt;   (username: erics / password: redhatdm1!)&lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;Be sure to give the container time to not only start up, but also time to start up the embedded &lt;a href="https://developers.redhat.com/products/eap/overview/"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt; (JBoss EAP) with Red Hat Decision Manager. You can check this by finding the deployed pod in the OpenShift console and looking into the logs tab.&lt;/p&gt; &lt;div id="attachment_535557" style="width: 310px" class="wp-caption alignright"&gt;&lt;img class="size-medium wp-image-535557" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-pod-ocp-300x137.png" alt="red hat decision manager" width="300" height="137" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-pod-ocp-300x137.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-pod-ocp-768x351.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/rhdm-pod-ocp-1024x467.png 1024w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;p class="wp-caption-text"&gt;The container instance of Red Hat Decision Manager on OpenShift Container Platform&lt;/p&gt;&lt;/div&gt; &lt;p&gt;That&amp;#8217;s it, you are now able to start developing business logic and events at your leisure.&lt;/p&gt; &lt;p&gt;Stay tuned for more by watching for updates here or following the projects at &lt;a href="https://gitlab.com/redhatdemocentral"&gt;Red Hat Demo Central&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F19%2Ftry-red-hat-decision-openshift%2F&amp;#038;title=Quickly%20try%20Red%20Hat%20Decision%20Manager%20in%20your%20Cloud" data-a2a-url="https://developers.redhat.com/blog/2018/11/19/try-red-hat-decision-openshift/" data-a2a-title="Quickly try Red Hat Decision Manager in your Cloud"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/19/try-red-hat-decision-openshift/"&gt;Quickly try Red Hat Decision Manager in your Cloud&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/S_AzAUVpbBo" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;It&amp;#8217;s been some time since I last talked with you about business logic engines and using them in application development cloud architectures. At that time, I showcased running JBoss BRMS in a container on Red Hat OpenShift. This gives you the cloud experience, one that&amp;#8217;s portable across private and public clouds, but on your own local laptop using [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/19/try-red-hat-decision-openshift/"&gt;Quickly try Red Hat Decision Manager in your Cloud&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/11/19/try-red-hat-decision-openshift/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">535517</post-id><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-19T12:00:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/19/try-red-hat-decision-openshift/</feedburner:origLink></entry><entry><title>AppDev in Cloud: How to put Red Hat Process Automation Manager in your Cloud</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jJyN800VZ44/appdev-in-cloud-how-to-put-red-hat-process-automation-manager-in-your-cloud.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="BPM Suite" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-appdev_in_cloud_how_to_put_red_hat_process_automation_manager_in_your_cloud</id><updated>2018-11-19T06:00:06Z</updated><published>2018-11-19T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-0AsNvn-bFbE/W-WbLrR9RDI/AAAAAAAAtRM/JDhd7czmmQMSw7_eGdnhz00NXLuEifMlACLcBGAs/s1600/rhcs-rhpam-ocp.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="red hat process automation manager" border="0" data-original-height="904" data-original-width="1600" height="180" src="https://3.bp.blogspot.com/-0AsNvn-bFbE/W-WbLrR9RDI/AAAAAAAAtRM/JDhd7czmmQMSw7_eGdnhz00NXLuEifMlACLcBGAs/s320/rhcs-rhpam-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Red Hat Process Automation Manager easy installation on&lt;br /&gt;OpenShift Container Platform&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;It's been some time &lt;a href="http://www.schabell.org/2016/03/rocking-appdev-in-cloud-jboss-bpmsuite-install-demo.html" target="_blank"&gt;since we talked about putting JBoss BPM Suite into your cloud&lt;/a&gt; and with the new product release it's time to talk AppDev in the Cloud again.&lt;br /&gt;&lt;br /&gt;It's time to update the story and show you how to put &lt;a href="https://developers.redhat.com/products/rhpam/overview/" target="_blank"&gt;Red Hat Process Automation Manager&lt;/a&gt; in your cloud.&lt;br /&gt;&lt;br /&gt;With this easy installation demo project you're able to leverage process automation tooling through the business central web console running containerized on any OpenShift Container Platform (OCP).&lt;br /&gt;&lt;br /&gt;Let's take a closer look at how this works.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Red Hat Process Automation Manager easy installation&lt;/h3&gt;&lt;div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-apK1SS3tWQs/W-WbspQxgcI/AAAAAAAAtRY/C5MucYnTT145TVzV7GijTcjn8Y_vd3iswCLcBGAs/s1600/rhcs-rhpam-ocp-console.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="red hat process automation manager" border="0" data-original-height="912" data-original-width="1600" height="182" src="https://2.bp.blogspot.com/-apK1SS3tWQs/W-WbspQxgcI/AAAAAAAAtRY/C5MucYnTT145TVzV7GijTcjn8Y_vd3iswCLcBGAs/s320/rhcs-rhpam-ocp-console.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Log in for Red Hat Process Automation Manager on&lt;br /&gt;OpenShift Container Platform&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Below is the outline from the easy installation project, a demo that gets you started in the fastest possible way.&lt;br /&gt;&lt;br /&gt;The goal here is to get you up and running, with a standard configuration to start your first business rules project.&lt;br /&gt;&lt;br /&gt;This section will take you through the simple to install example project that gives you a fully operational, fresh out of the box installation of Red Hat Decision Manager.&lt;br /&gt;&lt;br /&gt;Not only that, it will be a containerized installation that is created on your OpenShift installation!&lt;br /&gt;&lt;div&gt;&lt;div style="border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-top: 24px; padding-bottom: 0.3em; text-align: left;"&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;ol style="box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; margin-top: 0px; padding-left: 2em;"&gt;&lt;li style="box-sizing: border-box;"&gt;&lt;div style="box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;"&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-7KVzEVdq7f4/W-WbjsMctMI/AAAAAAAAtRU/eRRwb5aPa-MdXKF2VA101FEU_ZTlccHVwCLcBGAs/s1600/rhcs-rhpam-build-ocp.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="red hat process automation manager" border="0" data-original-height="577" data-original-width="1139" height="162" src="https://2.bp.blogspot.com/-7KVzEVdq7f4/W-WbjsMctMI/AAAAAAAAtRU/eRRwb5aPa-MdXKF2VA101FEU_ZTlccHVwCLcBGAs/s320/rhcs-rhpam-build-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Watch the container building live on OpenShift&lt;br /&gt;Container Platform&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;First ensure you have an OpenShift container based installation, such as one of the following installed first:&lt;/div&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;ul style="box-sizing: border-box; margin-bottom: 0px; margin-top: 0px; padding-left: 2em;"&gt;&lt;li style="box-sizing: border-box;"&gt;&lt;div style="box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" style="box-sizing: border-box; color: #4078c0; text-decoration: none;" target="_blank"&gt;OCP Install Demo&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; margin-top: 0.25em;"&gt;&lt;div style="box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;"&gt;or your own OpenShift installation.&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; margin-top: 0.25em;"&gt;&lt;div style="box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhpam-install-demo/-/archive/master/rhcs-rhdm-install-demo-master.zip" style="box-sizing: border-box; color: #4078c0; text-decoration: none;" target="_blank"&gt;Download and unzip this demo.&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; margin-top: 0.25em;"&gt;&lt;div style="box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;"&gt;Add products to installs directory.&lt;/div&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; margin-top: 0.25em;"&gt;&lt;div style="box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;"&gt;Run 'init.sh' or 'init.bat' file. 'init.bat' must be run with Administrative privileges:&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;"&gt;&lt;code style="background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;"&gt; # The installation needs to be pointed to a running version&lt;br /&gt; # of OpenShift, so pass an IP address such as:&lt;br /&gt; #&lt;br /&gt; $ ./init.sh 192.168.99.100 # example for OCP.&lt;br /&gt;&lt;br /&gt; $ ./init.sh 10.1.2.2 # example for CDK.&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;"&gt;Now log in to Red Hat Process Automation Manager and start developing containerized rules projects (the address will be generated by the init script).&lt;/div&gt;&lt;ul style="box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; margin-top: 0px; padding-left: 2em;"&gt;&lt;li style="box-sizing: border-box;"&gt;&lt;div style="box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;"&gt;OCP example:&amp;nbsp;http://rhcs-rhpam-install-demo-appdev-in-cloud.192.168.99.100.nip.io/business-central&amp;nbsp;( u:erics / p:redhatpam1! )&lt;br /&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-5QhN-DzU45M/W-WcTV5ALPI/AAAAAAAAtRo/RwVG6ZvHbSs4xHI0d5AkckHUieFcpgp1QCLcBGAs/s1600/rhcs-rhpam-pod-ocp.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="red hat process automation manager" border="0" data-original-height="735" data-original-width="1600" height="147" src="https://3.bp.blogspot.com/-5QhN-DzU45M/W-WcTV5ALPI/AAAAAAAAtRo/RwVG6ZvHbSs4xHI0d5AkckHUieFcpgp1QCLcBGAs/s320/rhcs-rhpam-pod-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;The container instance of Red Hat Process Automation&lt;br /&gt;Manager on OpenShift Container Platform&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Be sure to give the container time to not only start up, but to start up JBoss EAP with Red Hat Process Automation Manager. You can check this by finding the deployed pod in the OpenShift console and looking into the logs tab.&lt;br /&gt;&lt;br /&gt;That's it, you are now able to start developing process automation projects at your leisure.&lt;br /&gt;&lt;br /&gt;Stay tuned for more by watching for updates here or following the projects at &lt;a href="https://gitlab.com/redhatdemocentral" target="_blank"&gt;Red Hat Demo Central&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;As an extra, you can follow along as the&amp;nbsp;&lt;a href="http://bpmworkshop.gitlab.io/" target="_blank"&gt;online workshops are updated&lt;/a&gt;&amp;nbsp;and the&amp;nbsp;&lt;a href="http://www.schabell.org/p/red-hat-process-automation-manager.html" target="_blank"&gt;starters kit is updated&lt;/a&gt;&amp;nbsp;for Red Hat Process Automation Manager. This includes a separate project with a&amp;nbsp;&lt;a href="https://gitlab.com/bpmworkshop/rhpam-install-demo" target="_blank"&gt;local installation of Red Hat Process Automation Manager&lt;/a&gt;, should you want to avoid containers and cloud deployment.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6CAnRu1FQVc:6FirXASWpuQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6CAnRu1FQVc:6FirXASWpuQ:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6CAnRu1FQVc:6FirXASWpuQ:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6CAnRu1FQVc:6FirXASWpuQ:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6CAnRu1FQVc:6FirXASWpuQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6CAnRu1FQVc:6FirXASWpuQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6CAnRu1FQVc:6FirXASWpuQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6CAnRu1FQVc:6FirXASWpuQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6CAnRu1FQVc:6FirXASWpuQ:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6CAnRu1FQVc:6FirXASWpuQ:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6CAnRu1FQVc:6FirXASWpuQ:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/6CAnRu1FQVc" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jJyN800VZ44" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Process Automation Manager easy installation on OpenShift Container PlatformIt's been some time since we talked about putting JBoss BPM Suite into your cloud and with the new product release it's time to talk AppDev in the Cloud again. It's time to update the story and show you how to put Red Hat Process Automation Manager in your cloud. With this easy installation demo project you're able...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-19T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/6CAnRu1FQVc/appdev-in-cloud-how-to-put-red-hat-process-automation-manager-in-your-cloud.html</feedburner:origLink></entry><entry><title>Red Hat Mobile Portfolio Truck dodges storms while keeping Sales happy with OptaPlanner</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nu8VrrJI7Ik/TruckDodgesStormsWhileKeepingSalesHappy.html" /><category term="feed_group_name_optaplanner" scheme="searchisko:content:tags" /><category term="feed_name_optaplanner" scheme="searchisko:content:tags" /><category term="useCase" scheme="searchisko:content:tags" /><category term="vehicle routing" scheme="searchisko:content:tags" /><author><name>sudheerchekka</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_mobile_portfolio_truck_dodges_storms_while_keeping_sales_happy_with_optaplanner</id><updated>2018-11-19T11:46:23Z</updated><published>2018-11-19T00:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;The Mobile Portfolio Truck is Red Hat’s 18-wheel semi truck bringing enterprise IT solutions to customers which includes demo kiosks and hands-on experience with Red Hat’s portfolio. Our goal is to optimize the route of this truck to reach most customers to maximize revenue opportunity and reduce fuel consumption.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="mpcTruckRedHat.jpg" alt="mpcTruckRedHat"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Red Hat sales team work out the logistics with their customers such as availability dates and location to host the truck at the customer’s premises to showcase Red Hat’s portfolio. It is a daunting task to find an optimal schedule for MPC to visit all the customers across North America based on the customer’s availability dates, location and revenue opportunity size. Adding to this already complex problem, is the need to accommodate for last minute customer schedule changes and any unforeseen weather conditions.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let’s explore how OptaPlanner, Red Hat’s Business Optimizer platform, can help solve these planning problems. Here is a scenario where the MPC is stationed in St. Louis and scheduled to visit few customers in Florida and North Carolina for the next 2 weeks. Due to unforeseen weather conditions in the Caribbean region, MPC cannot make that trip and need to quickly come up with a new schedule to maximize the revenue opportunities in other regions with limited resources such as labor, fuel and other constraints such as customer’s availability dates, opportunity size and location.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We built a mobile application (deployed on &lt;a href="https://www.openshift.com/"&gt;OpenShift Container Platform&lt;/a&gt;) for account sales reps to request MPC for their customers. The prototype of this mobile application has a pre-configured list of accounts with its locations and availability date to host MPC. All the submitted requests are processed and stored in the underlying in-memory datastore (Red Hat Data Grid).&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="mpcRequestForm.png" alt="mpcRequestForm"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The backend application consists of multiple services also deployed on OpenShift. One of the services receive the MPC requests from the mobile application, process the data and stores in Red Hat Data Grid. Another service is the OptaPlanner service which is configured with various hard and soft constraints using Red Hat Decision Manager based business rules. These constraints include MPC need to take break during night and weekends, drive only certain number of hours in a day, maximize revenue opportunity, visit all accounts. Here is the screenshot of the dashboard application displaying the MPC requests from the mobile application and the starting location of MPC.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="mpcTruckSchedule1.png" alt="mpcTruckSchedule1"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On clicking the &lt;em&gt;Find Optimal Route&lt;/em&gt; button, the underlying OptaPlanner service pulls the truck request data from Data Grid and computes an optimal route based on the configured constraints.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="mpcTruckSchedule2.png" alt="mpcTruckSchedule2"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The pins in the map are numbered indicating the truck stops based on the computed optimal route.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Using &lt;a href="https://www.optaplanner.org/"&gt;OptaPlanner&lt;/a&gt;, we were able to solve a planning problem of truck’s schedule by maximizing sales revenue opportunity, reducing fuel and labor costs under constraints such as dates, location and driving times.&lt;/p&gt; &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nu8VrrJI7Ik" height="1" width="1" alt=""/&gt;</content><summary>The Mobile Portfolio Truck is Red Hat’s 18-wheel semi truck bringing enterprise IT solutions to customers which includes demo kiosks and hands-on experience with Red Hat’s portfolio. Our goal is to optimize the route of this truck to reach most customers to maximize revenue opportunity and reduce fuel consumption. The Red Hat sales team work out the logistics with their customers such as availabil...</summary><dc:creator>sudheerchekka</dc:creator><dc:date>2018-11-19T00:00:00Z</dc:date><feedburner:origLink>https://www.optaplanner.org/blog/2018/11/19/TruckDodgesStormsWhileKeepingSalesHappy.html</feedburner:origLink></entry><entry><title>JBoss Weekly 2018-11-16</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bxIgDuUW540/jboss-weekly-2018-11-16" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="ibm" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="red hat" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><category term="weekly_update" scheme="searchisko:content:tags" /><author><name>Jason Porter</name></author><id>searchisko:content:id:jbossorg_blog-jboss_weekly_2018_11_16</id><updated>2018-11-17T00:08:14Z</updated><published>2018-11-17T00:08:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:34dc5c9a-daac-47e6-aeea-0cc1b90d556f] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;div&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Welcome back! It has been a busy couple of weeks for us within Red Hat Middleware. Hot on the tails of Oracle CodeOne is Devoxx BE, followed shortly after by Devoxx MA!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;Red Hat and IBM&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;We want to start things off with news you have probably heard, but if not, IBM and Red Hat have entered into an agreement where IBM will be purchasing Red Hat. You may have read various blogs, articles or news stories about the acquisition. We asked Mark Little, VP of Engineering here at Red Hat for some thoughts:&lt;/p&gt;&lt;/div&gt;&lt;div class="quoteblock"&gt;&lt;blockquote class="jive-quote"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;They say 24 hours is a long time in politics but maybe it applies to the technology sector too! Between the last time we published the editorial and now Red Hat has agreed to be acquired by IBM. As the public statements from IBM and Red Hat discuss, the deal won&amp;#8217;t officially close until the second half of 2019 and until that happens both companies must remain operating as independent entities. There have also been strong statements from both sides that Red Hat will be a separate entity within IBM in order to preserve the benefits of acquiring such a leader in the open source space. At this stage though there are very few details that I or others can share publicly. However, and I&amp;#8217;ve written about this in my personal &lt;a class="jive-link-external-small" href="http://markclittle.blogspot.com/2018/10/red-hat-and-ibm-really.html" rel="nofollow"&gt;blog&lt;/a&gt;, I feel quietly confident that this acquisition (more like a semi-merger) will be good for Red Hat, our communities and our customers, as well as IBM.&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Thanks Mark!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;Releases&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Naturally, there have been a number of releases in the past couple of weeks. Here are some of the highlights:&lt;/p&gt;&lt;/div&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/hotrod-clients-c-and-c-830final-are-out.html" rel="nofollow"&gt;Inifinspan Hotrod C++ and C# 8.3.0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://www.keycloak.org/docs/latest/release_notes/index.html" rel="nofollow"&gt;Keycloak 4.6.0.Final&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/11/15/hibernate-orm-540-cr1-out/" rel="nofollow"&gt;Hibernate ORM 5.4.0.CR1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/infinispan-941final-and-infinispan.html" rel="nofollow"&gt;Infinispan 9.4.1.Final and Infinispan Spring Boot Starter 2.1.0.Final&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;Blogs&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;We&amp;#8217;d also like to draw your attention to some blogs from the community:&lt;/p&gt;&lt;/div&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://mswiderski.blogspot.com/2018/11/jbpm-empowered-by-camel-to-integrate.html" rel="nofollow"&gt;Apache Camel and jBPM integration update&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/the-fastest-path-to-running-infinispan.html" rel="nofollow"&gt;Running Infinispan on OpenShift&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://dandreadis.blogspot.com/2018/11/jakarta-ee-action-at-devoxx-belgium-2018.html" rel="nofollow"&gt;Jakarta EE at Devoxx Belgium&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/11/appdev-in-cloud-how-to-put-red-hat-decision-manager-in-your-cloud.html" rel="nofollow"&gt;Red Hat Decision Manager in the Cloud&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Thank you everyone for being part of the wider Red Hat Middleware family!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:34dc5c9a-daac-47e6-aeea-0cc1b90d556f] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bxIgDuUW540" height="1" width="1" alt=""/&gt;</content><summary>Welcome back! It has been a busy couple of weeks for us within Red Hat Middleware. Hot on the tails of Oracle CodeOne is Devoxx BE, followed shortly after by Devoxx MA!   Red Hat and IBM We want to start things off with news you have probably heard, but if not, IBM and Red Hat have entered into an agreement where IBM will be purchasing Red Hat. You may have read various blogs, articles or news sto...</summary><dc:creator>Jason Porter</dc:creator><dc:date>2018-11-17T00:08:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/11/16/jboss-weekly-2018-11-16</feedburner:origLink></entry><entry><title>Dynamically Generating KeyStores, TrustStores, and Certificates with WildFly Elytron</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ADyjZsArsOw/dynamically-generating-keystores.html" /><category term="Elytron" scheme="searchisko:content:tags" /><category term="feed_group_name_wildfly" scheme="searchisko:content:tags" /><category term="feed_name_jucook" scheme="searchisko:content:tags" /><category term="one-way-ssl" scheme="searchisko:content:tags" /><category term="ssl" scheme="searchisko:content:tags" /><category term="testing" scheme="searchisko:content:tags" /><category term="two-way-ssl" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><category term="x509certificate" scheme="searchisko:content:tags" /><author><name>Justin Cook</name></author><id>searchisko:content:id:jbossorg_blog-dynamically_generating_keystores_truststores_and_certificates_with_wildfly_elytron</id><updated>2018-11-16T17:14:00Z</updated><published>2018-11-16T17:14:00Z</published><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang=""&gt;&lt;head&gt; &lt;meta charset="utf-8" /&gt; &lt;meta name="generator" content="pandoc" /&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" /&gt; &lt;title&gt;dynamically-generating-certificates-keystores-in-elytron&lt;/title&gt; &lt;style type="text/css"&gt; code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} &lt;/style&gt; &lt;style type="text/css"&gt;a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; position: absolute; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; } pre.numberSource a.sourceLine:empty { position: absolute; } pre.numberSource a.sourceLine::before { content: attr(data-line-number); position: absolute; left: -5em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; font-weight: bold; } /* Alert */ code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */ code span.at { color: #7d9029; } /* Attribute */ code span.bn { color: #40a070; } /* BaseN */ code span.bu { } /* BuiltIn */ code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */ code span.ch { color: #4070a0; } /* Char */ code span.cn { color: #880000; } /* Constant */ code span.co { color: #60a0b0; font-style: italic; } /* Comment */ code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */ code span.do { color: #ba2121; font-style: italic; } /* Documentation */ code span.dt { color: #902000; } /* DataType */ code span.dv { color: #40a070; } /* DecVal */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.fl { color: #40a070; } /* Float */ code span.fu { color: #077992; } /* Function */ code span.im { } /* Import */ code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */ code span.kw { color: #007020; font-weight: bold; } /* Keyword */ code span.op { color: #666666; } /* Operator */ code span.ot { color: #007020; } /* Other */ code span.pp { color: #bc7a00; } /* Preprocessor */ code span.sc { color: #4070a0; } /* SpecialChar */ code span.ss { color: #bb6688; } /* SpecialString */ code span.st { color: #4070a0; } /* String */ code span.va { color: #19177c; } /* Variable */ code span.vs { color: #4070a0; } /* VerbatimString */ code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */ &lt;/style&gt; &lt;!--[if lt IE 9]&gt; &lt;script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"&gt;&lt;/script&gt; &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id="dynamically-generating-keystores-truststores-and-certificates-with-wildfly-elytron"&gt;Dynamically Generating KeyStores, TrustStores, and Certificates with WildFly Elytron&lt;/h1&gt;&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;&lt;p&gt;It is now possible to quickly and easily generate KeyStores, TrustStores, and Certificates by utilizing the Elytron Examples methods. A new utility class, CertificateGenerator, has been added that can generate a KeyStore and TrustStore, along with saving them to a file-system directory, with a single API call. This utility class can further be used to easily generate client and server KeyStores and TrustStores for Two Way SSL or can be easily fully customized to create as many KeyStores, TrustStores, Certificates (self signed and signed) as wanted, along with saving as many of those KeyStores and TrustStores to as many or as few directories as wanted. This blog post will go into several of the customization and default methods available, along with showing an example. Further examples can be found in the CertificateGenerationExample class and further information on the various methods can be found in the Elytron Examples Javadoc. &lt;strong&gt;It is important to remember that this utility is designed to be used for testing purposes and examples, since the certificates are self-signed or signed by a test certificate authority.&lt;/strong&gt;&lt;/p&gt;&lt;h2 id="pre-requirements"&gt;Pre-requirements&lt;/h2&gt;&lt;ol type="1"&gt;&lt;li&gt;Clone the Elytron Examples git repository from &lt;a href="https://github.com/wildfly-security-incubator/elytron-examples/"&gt;Github&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Compile the project with Maven, for example with bash: cd dynamic-certificates;mvn clean install&lt;/li&gt;&lt;li&gt;Either import the jar (target/dynamic-certificates-1.0.0.Alpha1-SNAPSHOT.jar) into your Java project or add a Maven dependency to depend on the dynamic-certificates artifact built in the previous step&lt;/li&gt;&lt;li&gt;Alternatively to the previous step, mvn exec:exec can be used to create the default Two-Way SSL keystores and truststores, which will placed in the &lt;strong&gt;target&lt;/strong&gt; directory&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="usage-basics"&gt;Usage Basics&lt;/h2&gt;&lt;p&gt;To use any of the methods in CertificateGenerator, the Builder will first have to be called and use to build and instance of CertificateGenerator. The builder requires a String of the path to the desired output directory to be passed directly into it. After this, the various Builder methods can be used to, optionally, pass in alias(es), distinguished name(s), key password(s), and serial number(s). &lt;strong&gt;Note: while some CertificateGenerator methods can be used without the optional parameters set, such as createKeyStore, all the methods are designed to be used in unison.&lt;/strong&gt;&lt;/p&gt;&lt;h2 id="generating-and-saving-the-keystores-and-truststores-to-file"&gt;Generating and Saving the KeyStores and TrustStores to File&lt;/h2&gt;&lt;p&gt;CertificateGenerator provides two ways for generating KeyStores and TrustStores, the first is using one of two utility methods, &lt;em&gt;generate()&lt;/em&gt; and &lt;em&gt;generateTwoWaySSL()&lt;/em&gt;, while the second way is directly calling the generation methods. In the first case, all parameters can be set using the &lt;em&gt;set()&lt;/em&gt; and &lt;em&gt;add()&lt;/em&gt; methods, both in the Builder and after the CertificateGenerator class is built. Once the CertificateGenerator is built and parameters set, calling the &lt;em&gt;generate()&lt;/em&gt; method will create the authority, create the certificates, create the KeyStore(s) and TrustStore(s), and then save the KeyStore(s) and TrustStore(s) to the output directory.&lt;/p&gt;&lt;h2 id="using-the-default-methods"&gt;Using the Default Methods&lt;/h2&gt;&lt;h3 id="the-generate-method"&gt;The &lt;em&gt;generate()&lt;/em&gt; Method&lt;/h3&gt;&lt;p&gt;To use this method, parameters can be set using the &lt;em&gt;set()&lt;/em&gt; and &lt;em&gt;add()&lt;/em&gt; methods, both in the Builder and after the CertificateGenerator class is built. There must be at least one alias and one distinguished name specified in either the Builder methods or with the CertificateGenerator methods, with all other parameters being optional. Once the CertificateGenerator is built and parameters set, calling the &lt;em&gt;generate()&lt;/em&gt; method will create the authority, create the certificates, create the KeyStore(s) and TrustStore(s), and then save the KeyStore(s) and TrustStore(s) to the output directory. See below for an example on generating a KeyStore containing one certificate, with an alias of “example-cert-1” and a DN of “CN=example-cert-1”, which will be signed by a Certificate Authority. The Certificate Authority will be a self signed certificate with a DN of “CN=Elytron CA, ST=Elytron” and will have its certificate as a trusted certificate in a generated TrustStore with an alias of “Example-CA”. The KeyStore and TrustStore will be saved to an output directory of “/home/elytron/example/” with their respective names being “example.keystore.jks” and “example.truststore.jks”.&lt;/p&gt;&lt;div class="sourceCode" id="cb1"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb1-1" data-line-number="1"&gt;CertificateGenerator generator = &lt;span class="kw"&gt;new&lt;/span&gt; CertificateGenerator.&lt;span class="fu"&gt;Builder&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-2" data-line-number="2"&gt; .&lt;span class="fu"&gt;setOutputLocation&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;/home/elytron/example/&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-3" data-line-number="3"&gt; .&lt;span class="fu"&gt;addAlias&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;example-cert-1&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-4" data-line-number="4"&gt; .&lt;span class="fu"&gt;addDN&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;CN=example-cert-1&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-5" data-line-number="5"&gt; .&lt;span class="fu"&gt;build&lt;/span&gt;();&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-6" data-line-number="6"&gt;generator.&lt;span class="fu"&gt;setAuthorityAlias&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;Example-CA&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-7" data-line-number="7"&gt;generator.&lt;span class="fu"&gt;setAuthorityDN&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;CN=Elytron CA, ST=Elytron&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-8" data-line-number="8"&gt;generator.&lt;span class="fu"&gt;setKeyStoreName&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;example.keystore.jks&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-9" data-line-number="9"&gt;generator.&lt;span class="fu"&gt;setTrustStoreName&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;example.truststore.jks&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-10" data-line-number="10"&gt;generator.&lt;span class="fu"&gt;generate&lt;/span&gt;();&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="the-generatetwowayssl-method"&gt;The &lt;em&gt;generateTwoWaySSL()&lt;/em&gt; Method&lt;/h3&gt;&lt;p&gt;This method has the required parameters all set already, but some optional parameters, including key passwords and key size, can be set. Calling it will create three KeyStores and three TrustStores, one for the server and one for each of the clients, client1 and client2, in a given output directly. Each client KeyStore will have one certificate each with a randomly generated serial number. The two certificates will have an alias of client1 and client2 with the distinguished names being, respectively, CN=client1 and CN=client2. The server KeyStore will contain a single certificate, server, that has a randomly generated serial number and a distinguished name of CN=server. All truststores will contain a single trusted certificate, the certificate authority, that is configured with the default authority parameters. See below for an example on using this method, which will create the KeyStores and TrustStores with the above stated defaults in the /home/elytron/example directory.&lt;/p&gt;&lt;div class="sourceCode" id="cb2"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb2-1" data-line-number="1"&gt;&lt;span class="kw"&gt;new&lt;/span&gt; CertificateGenerator.&lt;span class="fu"&gt;Builder&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb2-2" data-line-number="2"&gt; .&lt;span class="fu"&gt;setOutputLocation&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;/home/elytron/example/&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb2-3" data-line-number="3"&gt; .&lt;span class="fu"&gt;build&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb2-4" data-line-number="4"&gt; .&lt;span class="fu"&gt;generateTwoWaySSL&lt;/span&gt;();&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="directly-calling-the-methods"&gt;Directly Calling the Methods&lt;/h2&gt;&lt;p&gt;It is possible to use CertificateGenerator to step by step, in the same manner as the default methods use it, in order to create the KeyStores and TrustStores. While it will generally be easier to use the default methods, this way can be useful for the ability to do customize the result. This includes being able to stop part way through generation, for example if the certificates are wanted but not the KeyStores and TrustStores, using custom methods for certain steps, such as creating a certificate authority, or if only some output is wanted, such as only KeyStores.&lt;/p&gt;&lt;h3 id="public-methods"&gt;Public Methods&lt;/h3&gt;&lt;p&gt;The majority of CertificateGenerator’s methods are public for integration into any Java project, these are listed below. The methods are listed without their arguments (… signifying one or more arguments), more information can be found on the methods in the Javadoc.&lt;/p&gt;&lt;div class="sourceCode" id="cb3"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb3-1" data-line-number="1"&gt;&lt;span class="fu"&gt;createAuthority&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-2" data-line-number="2"&gt;&lt;span class="fu"&gt;createSignedCertificates&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-3" data-line-number="3"&gt;&lt;span class="fu"&gt;createKeyStore&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-4" data-line-number="4"&gt;&lt;span class="fu"&gt;createTrustStore&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-5" data-line-number="5"&gt;&lt;span class="fu"&gt;createKeyStoreAndTrustStore&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-6" data-line-number="6"&gt;&lt;span class="fu"&gt;saveKeyStoreToFile&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-7" data-line-number="7"&gt;&lt;span class="fu"&gt;saveTrustStoreToFile&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-8" data-line-number="8"&gt;&lt;span class="fu"&gt;saveKeyStoreAndTrustStoreToFile&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-9" data-line-number="9"&gt;&lt;span class="fu"&gt;createKeyStoreAndSaveToFile&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-10" data-line-number="10"&gt;&lt;span class="fu"&gt;createTrustStoreAndSaveToFile&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-11" data-line-number="11"&gt;&lt;span class="fu"&gt;createKeyStoreAndTrustStoreAndSaveToFile&lt;/span&gt;(...)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="using-the-public-methods"&gt;Using the Public Methods&lt;/h3&gt;&lt;p&gt;In general, the public methods should be used in the order of createAuthority() -&amp;gt; createSignedCertificates(…) -&amp;gt; KeyStore and/or TrustStore creation -&amp;gt; KeyStore and/or TrustStore save to file. However, this order is not strict since the only public method depending on any other is saving the KeyStore and/or TrustStore creation to saving. An example of modifying this order can be seen in the generateTwoWaySSL method, where the order is createAuthority() -&amp;gt; createSignedCertificates(…) -&amp;gt; KeyStore and TrustStore creation -&amp;gt; KeyStore and TrustStore save to file -&amp;gt; createSignedCertificates() -&amp;gt; KeyStore creation -&amp;gt; KeyStore and TrustStore save to file. As can also be seen in that method, the various public parameters can be modified at any point during the API calls.&lt;/p&gt;&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;&lt;p&gt;This blog post provides some information on the various ways that the new CertificateGenerator utility can be used to both generate KeyStores and TrustStores for examples or to be directly integrated into projects. The post provides some examples for some of the possible ways that the default methods, and through them the public parameters, can be set and modified during creation.&lt;/p&gt;&lt;p&gt;In short, the new tool can be used to quickly create a KeyStore and TrustStore with minimal configuration with:&lt;/p&gt;&lt;div class="sourceCode" id="cb4"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb4-1" data-line-number="1"&gt;&lt;span class="kw"&gt;new&lt;/span&gt; CertificateGenerator.&lt;span class="fu"&gt;Builder&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb4-2" data-line-number="2"&gt; .&lt;span class="fu"&gt;addAlias&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;alias1&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb4-3" data-line-number="3"&gt; .&lt;span class="fu"&gt;addDN&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;CN=dn1&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb4-4" data-line-number="4"&gt; .&lt;span class="fu"&gt;build&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb4-5" data-line-number="5"&gt; .&lt;span class="fu"&gt;generate&lt;/span&gt;();&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively, the tool can be quickly used for creating two-way SSL KeyStores and TrustStores by executing the project with mvn exec:exec or by using the following methods, with the resulting KeyStores and TrustStores placed in the &lt;strong&gt;target&lt;/strong&gt; directory:&lt;/p&gt;&lt;div class="sourceCode" id="cb5"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb5-1" data-line-number="1"&gt;&lt;span class="kw"&gt;new&lt;/span&gt; CertificateGenerator.&lt;span class="fu"&gt;Builder&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb5-2" data-line-number="2"&gt; .&lt;span class="fu"&gt;build&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb5-3" data-line-number="3"&gt; .&lt;span class="fu"&gt;generateTwoWaySSL&lt;/span&gt;();&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ADyjZsArsOw" height="1" width="1" alt=""/&gt;</content><summary>dynamically-generating-certificates-keystores-in-elytron Dynamically Generating KeyStores, TrustStores, and Certificates with WildFly Elytron Overview It is now possible to quickly and easily generate KeyStores, TrustStores, and Certificates by utilizing the Elytron Examples methods. A new utility class, CertificateGenerator, has been added that can generate a KeyStore and TrustStore, along with s...</summary><dc:creator>Justin Cook</dc:creator><dc:date>2018-11-16T17:14:00Z</dc:date><feedburner:origLink>https://justinwildfly.blogspot.com/2018/11/dynamically-generating-keystores.html</feedburner:origLink></entry><entry><title>Free Online Java EE Development Course From Red Hat Available Now</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Jw3f9xu8ulA/" /><category term="Developer Tools" /><category term="Java" /><category term="Red Hat JBoss Developer Studio" /><category term="Red Hat JBoss Enterprise Application Platform" /><category term="edx" /><category term="Enterprise Java" /><category term="free learning resources" /><category term="MooC" /><category term="training" /><author><name>Zachary Gutterman</name></author><id>https://developers.redhat.com/blog/?p=535097</id><updated>2018-11-16T16:41:19Z</updated><published>2018-11-16T16:41:19Z</published><content type="html">&lt;p&gt;The Red Hat Training team is pleased to announce the release of &lt;a href="https://www.edx.org/course/fundamentals-java-ee-development-red-hat-jb083x"&gt;Fundamentals of Java EE Development.&lt;/a&gt; This free training is hosted by our partner edX. edX is an open online course provider that now hosts three Red Hat courses, including &lt;a href="https://www.edx.org/course/fundamentals-red-hat-enterprise-linux-red-hat-rh066x"&gt;Fundamentals of Red Hat Enterprise Linux&lt;/a&gt; and &lt;a href="https://www.edx.org/course/fundamentals-containers-kubernetes-red-hat-do081x"&gt;Fundamentals of Containers, Kubernetes, and Red Hat OpenShift. &lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Enterprise Java&lt;/a&gt; (Java EE is now known as &lt;a href="https://developers.redhat.com/blog/2018/04/24/jakarta-ee-is-officially-out/"&gt;Jakarta EE)&lt;/a&gt; is one of the most in-demand and marketable programming platforms. With Fundamentals of Java EE Development, students learn the foundational skills needed to develop modern applications. Serving as an introduction to enterprise Java development using &lt;a href="https://developers.redhat.com/products/devstudio/overview/"&gt;Red Hat Developer Studio&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/eap/overview/"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt;, this course builds on students’ Java SE skills to teach the basic concepts behind more advanced topics such as &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; and cloud-native applications.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/RqvxmV377dQ?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-535097"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In this course, veteran instructor Will Dinyes guides students through enterprise Java development with easy-to-follow lectures and demonstrations. In addition, students are guided through transforming a simple Java SE command line application into an enterprise application. The final application includes various Java EE specifications, including Enterprise Java Beans, Java Persistence API, and JAX-RS for REST services.&lt;/p&gt; &lt;p&gt;This free course is based on our full-length Java EE Development course &lt;a href="https://www.redhat.com/en/services/training/jb183-red-hat-application-development-i-programming-java-ee"&gt;Red Hat Application Development I: Programming in Java EE (JB183)&lt;/a&gt;. If you are interested in learning more about that course, visit &lt;a href="https://www.redhat.com/en/services/training/learning-subscription"&gt;Red Hat Learning Subscription&lt;/a&gt; or &lt;a href="mailto:zgutterm@redhat.com"&gt;contact me&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#038;title=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" data-a2a-url="https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/" data-a2a-title="Free Online Java EE Development Course From Red Hat Available Now"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/"&gt;Free Online Java EE Development Course From Red Hat Available Now&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Jw3f9xu8ulA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The Red Hat Training team is pleased to announce the release of Fundamentals of Java EE Development. This free training is hosted by our partner edX. edX is an open online course provider that now hosts three Red Hat courses, including Fundamentals of Red Hat Enterprise Linux and Fundamentals of Containers, Kubernetes, and Red Hat OpenShift.  Enterprise Java (Java [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/"&gt;Free Online Java EE Development Course From Red Hat Available Now&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">535097</post-id><dc:creator>Zachary Gutterman</dc:creator><dc:date>2018-11-16T16:41:19Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/</feedburner:origLink></entry><entry><title>Microcontainers for Unit Testing</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/sMAGi3wUFFM/" /><category term="Community" /><category term="Containers" /><category term="Red Hat Enterprise Linux" /><category term="community" /><category term="containers" /><category term="glibc" /><category term="test automation" /><category term="testing" /><author><name>DJ Delorie</name></author><id>https://developers.redhat.com/blog/?p=534067</id><updated>2018-11-16T16:19:01Z</updated><published>2018-11-16T16:19:01Z</published><content type="html">&lt;p&gt;When you write a program, you have to test it. Run, program, run! Did it do what you expected? Yay! Maybe you&amp;#8217;ll even set up a testsuite to run it many times, just to be sure. You might even create some sample files for it to work with.&lt;/p&gt; &lt;p&gt;What do you do when your &amp;#8220;program&amp;#8221; is your whole system? You can&amp;#8217;t just change your &lt;tt&gt;/etc&lt;/tt&gt; config files just to test your new program, but that&amp;#8217;s exactly what you have to do when your &amp;#8220;program&amp;#8221; is the core C library, glibc. You can&amp;#8217;t even update the library easily, as the commands you use to update it (&lt;tt&gt;cp&lt;/tt&gt;, &lt;tt&gt;mv&lt;/tt&gt;) themselves rely on the library!&lt;/p&gt; &lt;p&gt;One option for this is to have a separate machine (real or virtual) set aside for testing. Still, installing a newly built glibc and automating tests on a remote machine is not a trivial task. Currently, most glibc testing is done in the &amp;#8220;build directory&amp;#8221; &amp;#8211; an uninstalled glibc is tested, with options and hacks to force it to use its own support files and configuration. This, however, has some drawbacks. Consider this code flow:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-534077 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-1.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-1.png" alt="" width="730" height="276" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-1.png 730w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-1-300x113.png 300w" sizes="(max-width: 730px) 100vw, 730px" /&gt;&lt;/p&gt; &lt;p&gt;When testing a non-installed glibc, you can test the &amp;#8220;User API&amp;#8221; portion of glibc&amp;#8217;s code, but you can&amp;#8217;t test the &amp;#8220;System API&amp;#8221; portion because it&amp;#8217;s bypassed &amp;#8211; you end up only testing the &amp;#8220;Test API&amp;#8221; code, which is a waste of time as it will never get used by a real application. Ideally, we&amp;#8217;d use the &amp;#8220;System API&amp;#8221; code for testing as well, but how?&lt;/p&gt; &lt;h2&gt;Enter the Microcontainer&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;Linux Containers&lt;/a&gt; allow you to have a &amp;#8220;system&amp;#8221; that&amp;#8217;s just a subdirectory in your filesystem. Normally this subdirectory would be its own block device, with a full OS on it, managed by some high level software like Kubernetes or Docker. In our case, though, we only need &amp;#8220;just enough&amp;#8221; of a container to test glibc. Conveniently, glibc is at the core of the operating system, and has almost no dependencies. So, we can &amp;#8220;install&amp;#8221; glibc into an empty directory and consider that directory to be a container. We also only need the smallest amount of &amp;#8220;containerizing&amp;#8221; code as possible, making this the smallest implementation of a container. Hence, a microcontainer.&lt;/p&gt; &lt;p&gt;In glibc 2.28 I extended the testsuite&amp;#8217;s infrastructure to support such a microcontainer via a support program called &lt;tt&gt;test-container&lt;/tt&gt;. The build system pre-installs a copy of glibc into an empty subdirectory, and &lt;tt&gt;test-container&lt;/tt&gt; runs each test within that container. There are a few dummy programs we include that aren&amp;#8217;t part of glibc, like &lt;tt&gt;/bin/sh&lt;/tt&gt; and &lt;tt&gt;/bin/echo&lt;/tt&gt;, but since the container has its own filesystem the test now looks like this:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-534087 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-2.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-2.png" alt="" width="515" height="132" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-2.png 515w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-2-300x77.png 300w" sizes="(max-width: 515px) 100vw, 515px" /&gt;&lt;/p&gt; &lt;p&gt;As you can see, the code path is simpler, and is the same path that real applications will use. The test-container program is able to isolate the test by giving it its own PID, UID, and filesystem namespaces. Each test that needs to run in a container may provide a skeleton set of files to install (like &lt;tt&gt;/etc/hosts&lt;/tt&gt;) and/or commands to run (i.e. to &lt;tt&gt;chmod /etc/hosts&lt;/tt&gt;) and the container is cleaned up between tests. Thus, the test may run as root, install &amp;#8220;system&amp;#8221; files, corrupt the environment, or whatever else it needs to do to test glibc.&lt;/p&gt; &lt;h2&gt;The Benefits&lt;/h2&gt; &lt;p&gt;Besides the obvious &amp;#8220;more tests&amp;#8221;, this new feature also allows tests that would normally be run outside of glibc&amp;#8217;s testsuite to be migrated into it. A test that might have been run, say, by a QA department just prior to shipping a product with glibc in it, can now be run months if not years earlier by the glibc developers themselves. Tests also become less expensive to run if they previously required manual intervention, or the provisioning of an entire virtual machine. All this means that problems get found quickly, typically by the upstream developer working on that code, when the new code is fresh in their mind. This leads to a better upstream, which benefits all glibc users.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#038;title=Microcontainers%20for%20Unit%20Testing" data-a2a-url="https://developers.redhat.com/blog/2018/11/16/microcontainers-for-unit-testing/" data-a2a-title="Microcontainers for Unit Testing"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/16/microcontainers-for-unit-testing/"&gt;Microcontainers for Unit Testing&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/sMAGi3wUFFM" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;When you write a program, you have to test it. Run, program, run! Did it do what you expected? Yay! Maybe you&amp;#8217;ll even set up a testsuite to run it many times, just to be sure. You might even create some sample files for it to work with. What do you do when your &amp;#8220;program&amp;#8221; [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/16/microcontainers-for-unit-testing/"&gt;Microcontainers for Unit Testing&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/11/16/microcontainers-for-unit-testing/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">534067</post-id><dc:creator>DJ Delorie</dc:creator><dc:date>2018-11-16T16:19:01Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/16/microcontainers-for-unit-testing/</feedburner:origLink></entry><entry><title>jBPM empowered by Camel to integrate with ... everything!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ICQcSwnkrmA/jbpm-empowered-by-camel-to-integrate.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-jbpm_empowered_by_camel_to_integrate_with_everything</id><updated>2018-11-16T13:55:58Z</updated><published>2018-11-16T13:55:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Apache Camel is extremely powerful integration library, comes with hundreds of components to integrate with 3rd party systems. jBPM on the other hand provides great support for business processes and cases. In many situations data produced by jBPM is required to be pushed to external systems or business processes would need to be informed about changes in external systems that can influence business logic.&lt;br /&gt;&lt;br /&gt;So why not combine these two and provide state of the art business solution that can focus on business goals and yet integrate with pretty much anything in the world.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Improved camel-jbpm component&lt;/h3&gt;&lt;div&gt;camel-jbpm component has been added in 2.6 version of Camel. At that time it was based on jBPM 6.5 and provided only producer based on kie-remote-client that interacts with jBPM console (aka workbench) REST api. It's been a while since then and even more important jBPM Console REST api for execution does not exists any more and same applies for kie-remote-client. It has been replaced completely with way more powerful kie server client.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So it was high time to improve the camel-jbpm component to first of all upgrade to latest version (7.14) and replace use of kie-remote-client with kie-server-client for producer usage. And to provide consumer support as well that will enable simple integration with outside world for pushing out data from jBPM.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So when it comes to consumer of camel-jbpm component users can now take advantage of following integrations of jBPM empowered by Camel&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;ProcessEventListeners&lt;/li&gt;&lt;li&gt;TaskLifeCycleEventListeners&lt;/li&gt;&lt;li&gt;CaseEventListeners&lt;/li&gt;&lt;li&gt;EventEmitter&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;All of these can be easily configured as Camel routes, here is a simple example that will be triggered upon process events being generated by jBPM&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre class="brush:xml"&gt;&amp;lt;routes xmlns="http://camel.apache.org/schema/spring"&amp;gt;&lt;br /&gt; &amp;lt;route id="processes"&amp;gt;&lt;br /&gt; &amp;lt;from uri="jbpm:events:process"/&amp;gt;&lt;br /&gt; &amp;lt;filter&amp;gt;&lt;br /&gt; &amp;lt;simple&amp;gt;${in.header.EventType} == 'beforeProcessStarted'&amp;lt;/simple&amp;gt;&lt;br /&gt; &amp;lt;to uri="log:kjar.processes?level=INFO&amp;amp;amp;showBody=true&amp;amp;amp;showHeaders=true"/&amp;gt;&lt;br /&gt; &amp;lt;/filter&amp;gt;&lt;br /&gt; &amp;lt;/route&amp;gt;&lt;br /&gt;&amp;lt;/routes&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;as you can see as soon as there will be events produced on the &lt;b&gt;jbpm:events:processes&lt;/b&gt; a new exchange will be processed that will simply go over filter and get only &lt;b&gt;beforeProcessStarted&lt;/b&gt; events (each event type is set as header) and the body is actual event produced by jBPM.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;NOTE: if you need more than one on the same consumer type you should suffix it with sort of classifier to make the endpoints unique&lt;/i&gt; &lt;b&gt;jbpm:events:process:startedOnly&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Similar endpoints can be used for user tasks and cases&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;jbpm:events:tasks&lt;/li&gt;&lt;li&gt;jbpm:events:cases&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Configure routes&lt;/h3&gt;&lt;div&gt;Routes can be configured either on application level (kie server or business app) or kjar level.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;camel-jbpm component comes with KIE server extension that will be automatically registered in KIE Server when the jar file is present - see Installation section for more details on it.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Global routes should be created in the root of the application class path (kie-server.war/WEB-INF/classes) in a file name global-camel-routes.xml&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Such global routes will apply to all deployed kjars in KIE Server.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;KJAR specific routes can also be used by placing camel-routes.xml file in the root of kjar class path (src/main/resources folder of the kjar source). When such file is found new (kjar scoped) CamelContext is created with all routes defined in that file. These routes will only apply to that specific KIE Container.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Installation&lt;/h3&gt;&lt;div&gt;Installation is really simple, it requires to drop two jar files into kie-server.war/WEB-INF/lib&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;camel-core&lt;/li&gt;&lt;li&gt;camel-jbpm&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;and that's it, start the server and you will see that Camel KIE Server extensions boots and does its thing :)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In case you would like to use another component to interact with, you need to do the same, drop the component jar file and its runtime dependencies. For the sake of example we use camel-kafka that requires these jar files to be placed in kie-server.war/WEB-INF/lib&lt;/div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;camel-kafka-2.19.0.jar&lt;/li&gt;&lt;li&gt;kafka-clients-0.10.2.0.jar&lt;/li&gt;&lt;li&gt;lz4-1.3.0.jar&lt;/li&gt;&lt;li&gt;snappy-java-1.1.2.6.jar&lt;/li&gt;&lt;/ul&gt;NOTE: Make sure to use camel-kafka and kafka-clients matching your Kafka cluster.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Example&lt;/h3&gt;&lt;div&gt;A simple use case to illustrate is to take advantage of the camel-jbpm consumer to react to events produced by jBPM for both tasks and processes&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;for tasks we just log them to console&lt;/li&gt;&lt;li&gt;for processes we push them out to Kafka&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;here is the camel-routes.xml for this example&lt;/div&gt;&lt;/div&gt;&lt;pre class="brush:xml"&gt;&amp;lt;routes xmlns="http://camel.apache.org/schema/spring"&amp;gt; &lt;br /&gt; &amp;lt;route id="processes"&amp;gt;&lt;br /&gt; &amp;lt;from uri="jbpm:events:process:test"/&amp;gt;&lt;br /&gt; &amp;lt;filter&amp;gt;&lt;br /&gt; &amp;lt;simple&amp;gt;${in.header.EventType} starts with 'before'&amp;lt;/simple&amp;gt;&lt;br /&gt; &amp;lt;transform&amp;gt;&lt;br /&gt; &amp;lt;simple&amp;gt;${in.header.EventType} for process instance ${body.processInstance.id}&amp;lt;/simple&amp;gt;&lt;br /&gt; &amp;lt;/transform&amp;gt;&lt;br /&gt; &amp;lt;to uri="kafka:TestLog?brokers=localhost:9092"/&amp;gt;&lt;br /&gt; &amp;lt;/filter&amp;gt;&lt;br /&gt; &amp;lt;/route&amp;gt;&lt;br /&gt; &lt;br /&gt; &amp;lt;route id="tasks"&amp;gt;&lt;br /&gt; &amp;lt;from uri="jbpm:events:task:test"/&amp;gt;&lt;br /&gt; &amp;lt;filter&amp;gt;&lt;br /&gt; &amp;lt;simple&amp;gt;${in.header.EventType} starts with 'before'&amp;lt;/simple&amp;gt;&lt;br /&gt; &amp;lt;to uri="log:kjar.tasks?level=INFO&amp;amp;amp;showBody=true&amp;amp;amp;showHeaders=true"/&amp;gt;&lt;br /&gt; &amp;lt;/filter&amp;gt;&lt;br /&gt; &amp;lt;/route&amp;gt;&lt;br /&gt;&amp;lt;/routes&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;and here is just a short screencast showing this in action&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/NUM7KhSDBQM" width="560"&gt;&lt;/iframe&gt; &lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;b&gt;IMPORTANT: This improved camel-jbpm component is not yet released, it will go out with Apache Camel 2.23.0 release that is expected to be out in couple of days from now. So prepare yourself and make sure to give it a go.&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ICQcSwnkrmA" height="1" width="1" alt=""/&gt;</content><summary>Apache Camel is extremely powerful integration library, comes with hundreds of components to integrate with 3rd party systems. jBPM on the other hand provides great support for business processes and cases. In many situations data produced by jBPM is required to be pushed to external systems or business processes would need to be informed about changes in external systems that can influence busine...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-11-16T13:55:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/11/jbpm-empowered-by-camel-to-integrate.html</feedburner:origLink></entry></feed>
